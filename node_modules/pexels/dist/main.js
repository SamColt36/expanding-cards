var t = { photo: "https://api.pexels.com/v1/", video: "https://api.pexels.com/videos/", collections: "https://api.pexels.com/v1/collections/" };

function r(a, n) { var o = { method: "GET", headers: { Accept: "application/json", "Content-Type": "application/json", "User-Agent": "Pexels/JavaScript", Authorization: a } }, e = t[n]; return function (t, a) { return fetch("" + e + t + "?" + (function (t) { return Object.keys(t).map(function (a) { return a + "=" + t[a] }).join("&") }(a || {})), o).then(function (t) { if (!t.ok) throw new Error(t.statusText); return t.json() }) } } function e(a) { var n = r(a, "collections"); return { all: function (a) { return void 0 === a && (a = {}), n("", a) }, media: function (a) { var o = a.id, e = function (t, a) { if (null == t) return {}; var n, o, r = {}, i = Object.keys(t); for (o = 0; o < i.length; o++)a.indexOf(n = i[o]) >= 0 || (r[n] = t[n]); return r }(a, ["id"]); return n("" + o, e) }, featured: function (a) { return void 0 === a && (a = {}), n("featured", a) } } } function n(t) { return !(!t || !t.photos) } var o = { isPhotos: n, isVideos: function (t) { return !(!t || !t.videos) }, isError: function (t) { return !!t.error } }; function i(a) { var n = r(a, "photo"); return { search: function (t) { return n("/search", t) }, curated: function (t) { return void 0 === t && (t = {}), n("/curated", t) }, show: function (t) { return n("/photos/" + t.id) }, random: function () { try { var t = Math.floor(1e3 * Math.random()); return Promise.resolve(this.curated({ page: t, per_page: 1 })).then(function (t) { return n(t) ? t.photos[0] : t }) } catch (t) { return Promise.reject(t) } } } } function u(a) { var n = r(a, "video"); return { search: function (t) { return n("/search", t) }, popular: function (t) { return void 0 === t && (t = {}), n("/popular", t) }, show: function (t) { return n("/videos/" + t.id) } } } export function createClient(a) { if (!a || "string" != typeof a) throw new TypeError("An ApiKey must be provided when initiating the Pexel's client."); return { typeCheckers: o, photos: i(a), videos: u(a), collections: e(a) } }